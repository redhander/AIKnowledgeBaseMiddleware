# services:
#   etcd:
#     container_name: milvus-etcd
#     image: quay.io/coreos/etcd:v3.5.0
#     environment:
#       - ETCD_AUTO_COMPACTION_MODE=revision
#       - ETCD_AUTO_COMPACTION_RETENTION=1000
#       - ETCD_QUOTA_BACKEND_BYTES=4294967296
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
#     command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd

#   minio:
#     container_name: milvus-minio
#     image: minio/minio:RELEASE.2020-12-03T00-03-10Z
#     environment:
#       MINIO_ACCESS_KEY: minioadmin
#       MINIO_SECRET_KEY: minioadmin
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
#     command: minio server /minio_data
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
#       interval: 30s
#       timeout: 20s
#       retries: 3

#   standalone:
#     container_name: milvus-standalone
#     image: milvusdb/milvus:v2.0.0
#     command: ["milvus", "run", "standalone"]
#     environment:
#       ETCD_ENDPOINTS: etcd:2379
#       MINIO_ADDRESS: minio:9000
#     volumes:
#       - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
#     ports:
#       - "19530:19530"
#     depends_on:
#       - "etcd"
#       - "minio"
services:
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.18
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://etcd:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio/data1:/data1
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio/data2:/data2
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio/data3:/data3
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio/data4:/data4
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  standalone:
    container_name: milvus-standalone
    image: milvusdb/milvus:v2.5.12
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      MINIO_REGION: us-east-1
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
  huggingface:
    container_name: huggingface
    build: ./huggingface-server
    ports:
      - "8081:8081"
    volumes:
    - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/huggingface:/models
      - ./huggingface-server/models:/models  # 确保模型文件挂载到容器内
networks:
  default:
    name: milvus
    external: true